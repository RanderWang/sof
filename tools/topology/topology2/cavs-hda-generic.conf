<include/common/vendor-token.conf>
<include/common/tokens.conf>
<include/components/pipeline.conf>
<include/pipelines/cavs/passthrough-playback.conf>
<include/pipelines/cavs/passthrough-capture.conf>
<include/components/copier.conf>
<include/components/virtual.conf>
<include/common/pcm.conf>
<include/common/pcm_caps.conf>
<include/common/fe_dai.conf>
<include/dais/hda.conf>
<include/dais/hw_config.conf>
<include/common/manifest.conf>
<include/common/pcm.conf>
<include/common/route.conf>
Object.Dai {
	HDA.0 {
		name "Analog Playback and Capture"
		id 4
		index 0
		default_hw_conf_id 4
		Object.Base.hw_config.HDA0 [
		]
		Object.Widget.copier.1 {
			direction 0 
			index 1
			copier_type "HDA"
			type dai_in
			stream_name "Analog Playback and Capture"
			period_sink_count 0
			period_source_count 2
			format s32le
		}
		Object.Widget.copier.2 {
			direction capture 
			index 2
			copier_type "HDA"
			type dai_out
			stream_name "Analog Playback and Capture"
			copier_index 1
			period_sink_count 2
			period_source_count 0
			format s32le
		}
		direction duplex
	}
        HDA.4 {
                name iDisp1
                id 1
                index 0
                default_hw_conf_id 1
                Object.Base.hw_config.HDA4 [
                ]
                Object.Widget.copier.3 {
                        index 7
			copier_type "HDA"
                        type dai_in
                        stream_name iDisp1
                        period_sink_count 0
                        period_source_count 2
                        format s32le
                }
                direction playback
        }
        HDA.5 {
                name iDisp2
                id 2
                index 0
                default_hw_conf_id 2
                Object.Base.hw_config.HDA5 [
                ]
                Object.Widget.copier.4 {
                        index 8
			copier_type "HDA"
                        type dai_in
                        stream_name iDisp2
                        period_sink_count 0
                        period_source_count 2
                        format s32le
                }
                direction playback
        }
        HDA.6 {
                name iDisp3
                id 3
                index 0
                default_hw_conf_id 3
                Object.Base.hw_config.HDA6 [
                ]
                Object.Widget.copier.5 {
                        index 9
			copier_type "HDA"
                        type dai_in
                        stream_name iDisp3
                        period_sink_count 0
                        period_source_count 2
                        format s32le
                }
                direction playback
        }
}
Object.Pipeline {
	passthrough-playback.0 {
		Object.Widget.pipeline.1 {
			stream_name 'copier.HDA.1.1'
		}
		Object.Widget.copier.1{
			stream_name 'Passthrough Playback 0'
		}
		format s24le
	}
	passthrough-capture.1 {
		Object.Widget.pipeline.2 {
			stream_name 'copier.HDA.2.2'
		}
		Object.Widget.copier.1{
			stream_name 'Passthrough Capture 0'
		}
		format s24le
	}
        passthrough-playback.2 {
                Object.Widget.pipeline.1 {
                        stream_name 'copier.HDA.3.0'
                }
                Object.Widget.copier.1{
                        stream_name 'Passthrough Playback 1'
                }
                format s24le
        }
        passthrough-playback.3 {
                Object.Widget.pipeline.1 {
                        stream_name 'copier.HDA.4.0'
                }
                Object.Widget.copier.1{
                        stream_name 'Passthrough Playback 2'
                }
                format s24le
        }
        passthrough-playback.4 {
                Object.Widget.pipeline.1 {
                        stream_name 'copier.HDA.3.0'
                }
                Object.Widget.copier.1{
                        stream_name 'Passthrough Playback 3'
                }
                format s24le
        }
}

Object.PCM {
	pcm.0 {
		name "HDA Analog"
		Object.Base.fe_dai."HDA Analog" {}
		Object.PCM.pcm_caps.playback {
			name 'Passthrough Playback 0'
			formats 'S24_LE,S16_LE'
		}
		Object.PCM.pcm_caps.capture {
			name 'Passthrough Capture 0'
			formats 'S24_LE,S16_LE'
		}
		direction duplex
	}
        pcm.1{
                name "HDMI1"
                Object.Base.fe_dai."HDMI1" {}
                Object.PCM.pcm_caps.playback {
                        name 'Passthrough Playback 1'
                        formats 'S24_LE,S16_LE'
                }
                direction playback 
        }
        pcm.2{
                name "HDMI2"
                Object.Base.fe_dai."HDMI2" {}
                Object.PCM.pcm_caps.playback {
                        name 'Passthrough Playback 2'
                        formats 'S24_LE,S16_LE'
                }
                direction playback
        }
        pcm.3{
                name "HDMI3"
                Object.Base.fe_dai."HDMI3" {}
                Object.PCM.pcm_caps.playback {
                        name 'Passthrough Playback 3'
                        formats 'S24_LE,S16_LE'
                }
                direction playback
        }
}

Object.Base.route.1 {
	source 'copier.host.0.1'
	sink 'copier.HDA.1.1'
}
Object.Base.route.2 {
	source 'copier.HDA.2.2'
	sink 'copier.host.1.1'
}


Object.Widget.virtual {
	codec0_in {
		type input
		index 1
	}
	codec1_in {
		type input
		index 2
	}
	codec0_out {
		type output
		index 3
	}
	codec1_out {
		type output
		index 4
	}
	codec2_in {
		type input
		index 5
	}
	codec2_out {
		type output
		index 6
	}
	iDisp1_out {
		type output
		index 7
	}
	iDisp2_out {
		type output
		index 8
	}
	iDisp3_out {
		type output
		index 9
	}
	'iDisp3 Tx' {
		type out_drv
		index 0
	}
	'iDisp2 Tx' {
		type out_drv
		index 1
	}
	'iDisp1 Tx' {
		type out_drv
		index 2
	}
	'Analog CPU Playback' {
		type out_drv
		index 3
	}
	'Digital CPU Playback' {
		type out_drv
		index 4
	}
	'Alt Analog CPU Playback' {
		type out_drv
		index 5
	}
	'Analog CPU Capture' {
		type input
		index 6
	}
	'Digital CPU Capture' {
		type input
		index 7
	}
	'Alt Analog CPU Capture' {
		type input
		index 8
	}
}
